generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* ---- Enums ---- */
enum Role {
  USER
  ADMIN
}

/* NEW: Category enum */
enum Category {
  FUNNY
  ANIMALS
  GAMING
  OTHER
}

/* Map singular models to existing plural tables */
model User {
  id       Int             @id @default(autoincrement())
  username String          @unique @db.VarChar(50)
  password String          @db.VarChar(255)
  role     Role            @default(USER)

  memes    Meme[]
  likes    UserLikesMeme[]   // relations to join table

  @@map("users") // table name is "users"
}

model Meme {
  id      Int              @id @default(autoincrement())
  title   String           @db.VarChar(100)
  url     String
  userId  Int?             @map("user_id") // column is "user_id" and it's nullable in DB
  user    User?            @relation(fields: [userId], references: [id], onDelete: Cascade)

  likedBy UserLikesMeme[]    // relations from join table

  /* NEW: category with a safe default so migration is non-breaking */
  category  Category @default(OTHER)

  @@map("memes") // table name is "memes"
}

/* Join table for likes (one like per user per meme) */
model UserLikesMeme {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  meme   Meme @relation(fields: [memeId], references: [id])
  userId Int
  memeId Int

  @@unique([userId, memeId], name: "userId_memeId")
  @@map("user_likes_meme")
}
